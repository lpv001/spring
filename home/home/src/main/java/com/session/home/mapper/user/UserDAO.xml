<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.session.home.mapper.user.UserDAO">

	<resultMap id="user" type="com.session.home.model.User">
		<id property="id" column="ID"/>
        <result property="username" column="USERNAME"/>
		<result property="password" column="PASSWORD"/>		
    </resultMap>

	<sql id="userSearchSql">
		<where>
			<if test="neUserIds != null">
				AND USER_ID NOT IN
				<foreach item="neId" collection="neUserIds" separator="," open="(" close=")">
			        #{neId}
			    </foreach>
			</if>
			
			<if test="neUserId != null">
				AND USER_ID != #{neUserId}
			</if>
			
			<if test="userId != null">
				AND USER_ID = #{userId}
			</if>
			
			<if test="neIds != null">
				AND ID NOT IN
				<foreach item="neId" collection="neIds" separator="," open="(" close=")">
			        #{neId}
			    </foreach>
			</if>
			
			<if test="neId != null">
				AND ID != #{neId}
			</if>
			
			<if test="fullName != null">
				AND FULL_NAME LIKE CONCAT('%',#{fullName},'%')
			</if>
			
		</where>
	</sql>

	<insert id="insertUser" parameterType="com.session.home.model.User">
    	INSERT INTO users(username, password) VALUES(#{username},#{password});
    </insert>

	<select id="findUserByUsername" parameterType="java.lang.String" resultMap="user">
		SELECT * FROM users WHERE username = #{username} LIMIT 1;
	</select>

    <select id="selectUserFirst" parameterType="java.util.Map" resultMap="user" >
        SELECT * FROM users
        <!-- <include refid="userSearchSql"></include>s -->
   		LIMIT 0, 1;
    </select>
    
    <!-- <sql id="userSearchSql">
		<where>
			<if test="neUserIds != null">
				AND USER_ID NOT IN
				<foreach item="neId" collection="neUserIds" separator="," open="(" close=")">
			        #{neId}
			    </foreach>
			</if>
			
			<if test="neUserId != null">
				AND USER_ID != #{neUserId}
			</if>
			
			<if test="userId != null">
				AND USER_ID = #{userId}
			</if>
			
			<if test="neIds != null">
				AND ID NOT IN
				<foreach item="neId" collection="neIds" separator="," open="(" close=")">
			        #{neId}
			    </foreach>
			</if>
			
			<if test="neId != null">
				AND ID != #{neId}
			</if>
			
			<if test="fullName != null">
				AND FULL_NAME LIKE CONCAT('%',#{fullName},'%')
			</if>
			
		</where>
	</sql>
	
	<select id="selectUserCount" parameterType="java.util.Map" resultType="int" >
        SELECT count(1) FROM USER;
    </select>
    
    <select id="selectUser" parameterType="java.util.Map" resultMap="user" >
        SELECT * FROM USER 
        <include refid="userSearchSql"></include>
   		<include refid="paginationSql"/>
    </select>
     <select id="selectUserFirst" parameterType="java.util.Map" resultMap="user" >
        SELECT * FROM USER 
        <include refid="userSearchSql"></include>
   		LIMIT 0, 1;
    </select>
    
    
    
    <sql id="paginationSql">
    	<if test="pagination">
    		ORDER BY ${pagination.sort} ${pagination.order}
			LIMIT #{pagination.offset}, #{pagination.limit};
    	</if>
	</sql>
    
    <insert id="insertUser" parameterType="com.session.home.model.User">
    	INSERT INTO USER(PASSWORD,USER_ID, FIRST_NAME,LAST_NAME,FULL_NAME,GENDER,MOBILE,PROFILE_PHOTO,EMAIL,REGISTERATION_DATE,CREATED_BY_ID)
    		VALUES(#{password},#{userId},#{firstName},#{lastName},#{fullName},#{gender},#{mobile},#{profilePhoto},#{email},#{registerationDate},#{createdById});
    </insert>
    
    <update id="updateUser" parameterType="com.session.home.model.User">
		 UPDATE USER SET PASSWORD=#{password},USER_ID=#{userId}, FIRST_NAME=#{firstName}, 
		 	LAST_NAME=#{lastName},FULL_NAME=#{fullName}, PROFILE_PHOTO=#{profilePhoto}, EMAIL=#{email},
		 	GENDER=#{gender}, MOBILE=#{mobile}, UPDATED_BY_ID=#{updatedById}
		 WHERE ID=#{id};
	</update>
	
	<update id="updateUserPassword" parameterType="com.session.home.model.User">
		 UPDATE USER SET PASSWORD=#{password}
		 WHERE ID=#{id};
	</update>

	<delete id="deleteUser" parameterType="com.session.home.model.User">
		DELETE FROM USER WHERE ID = #{id};
	</delete>
	
	<select id="findUserById" parameterType="int" resultMap="user">
		SELECT * FROM USER WHERE ID = #{id};
	</select>
	
	
    <select id="findUserByUserId" parameterType="java.lang.String" resultMap="user">
		SELECT * FROM USER WHERE USER_ID = #{userId} LIMIT 1;
	</select> -->
	
	
	
</mapper>